
// Serverless main function
func main() {
	{{range $idx, $addr := .ZipperAddrs}}
	sfn{{$idx}}Close, err := runSFN("{{$addr}}")
	defer sfn{{$idx}}Close()
	if err != nil {
		log.Printf("[flow] connect to zipper[{{$addr}}], err=%v\n", err)
		os.Exit(1)
	}
	{{end}}
	select {}
}

func runSFN(addr string) (closeFn func() error, err error){
	sfn := yomo.NewStreamFunction(
		"{{$.Name}}",
		yomo.WithZipperAddr(addr),
		yomo.WithObserveDataTags(DataTags()...),
        {{if $.Credential -}}yomo.WithCredential("{{$.Credential}}"),{{- end}}
	)
	closeFn = sfn.Close

	// create a Rx runtime.
	rt := rx.NewRuntime(sfn)

	// set handler
	sfn.SetHandler(rt.RawByteHandler)

	// set error handler
	sfn.SetErrorHandler(func(err error) {
		log.Printf("[flow][%s] error handler: %T %v\n", addr, err, err)
	})

	// start
	err = sfn.Connect()
	if err != nil {
		return 
	}

	// pipe rx stream and rx handler.
	rt.Pipe(Handler)

	return 
}
